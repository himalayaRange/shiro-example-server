[main]

#首页
authc.loginUrl=/index
#错误页面
roles.unauthorizedUrl=/unroles
perms.unauthorizedUrl=/unauth

#会话管理，用于web环境，直接废弃servlet容器的会话管理，默认30分钟
sessionManager=org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager=$sessionManager
sessionManager.globalSessionTimeout=1800000

#自定义Permission解析器
urlPermissionResolver=cn.com.zygx.backFramework.permission.UrlPermissionResolver
securityManager.authorizer.permissionResolver = $urlPermissionResolver

#自定义realm,可以配置多个，默认是iniRealm,并进行md5加密
userRealm=cn.com.zygx.backFramework.shiro.realm.UserRealm
hashMatcher=org.apache.shiro.authc.credential.HashedCredentialsMatcher
hashMatcher.hashAlgorithmName=md5
#shiro的加密方式 userRealm.credentialsMatcher=$passworMatcher
userRealm.credentialsMatcher=$hashMatcher
securityManager.realms=$userRealm

[filters]
#shiroPathFilter=cn.com.zygx.backFramework.filter.ShiroPathMatchingFilter
#accessControlFilter=cn.com.zygx.backFramework.filter.ShiroAccessControlFilter
resourcesCheckFilter=cn.com.zygx.backFramework.filter.ResourcesCheckFilter
resourcesCheckFilter.errorUrl=/unauth

#从上往下依次匹配，如果不加roles[**]，shiro只进行认证，不进行授权，实际中authc和roles是通过过滤器来动态的获取 DefaultFilter.class中定义了多个过滤器
[urls] 
#/**=shiroPathFilter[ok,abc]
#/**=accessControlFilter
/admin/**=authc,resourcesCheckFilter
/index/**=authc 
#/admin/user/**=authc,roles[ADMIN]
#/admin/role/**=authc,roles[TEST]
#/admin/**=authc
/login=anon
/logout=logout
