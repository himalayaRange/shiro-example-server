<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.zygx.backFramework.dao.OAuth2UserDao" >
  <resultMap id="BaseResultMap" type="cn.com.zygx.backFramework.model.Oauth2User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="create_date" property="create_date" jdbcType="TIMESTAMP" />
    <result column="update_date" property="update_date" jdbcType="TIMESTAMP" />
    <result column="is_valid" property="is_valid" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, salt, create_date, update_date, is_valid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from oauth2_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  
   <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from oauth2_user
    where username= #{username,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from oauth2_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.com.zygx.backFramework.model.Oauth2User" >
    insert into oauth2_user (id, username, password, 
      salt, create_date, update_date, 
      is_valid)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{create_date,jdbcType=TIMESTAMP}, #{update_date,jdbcType=TIMESTAMP}, 
      #{is_valid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.zygx.backFramework.model.Oauth2User" >
    insert into oauth2_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="create_date != null" >
        create_date,
      </if>
      <if test="update_date != null" >
        update_date,
      </if>
      <if test="is_valid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="create_date != null" >
        #{create_date,jdbcType=TIMESTAMP},
      </if>
      <if test="update_date != null" >
        #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="is_valid != null" >
        #{is_valid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="cn.com.zygx.backFramework.model.Oauth2User" >
    update oauth2_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="create_date != null" >
        create_date = #{create_date,jdbcType=TIMESTAMP},
      </if>
      <if test="update_date != null" >
        update_date = #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="is_valid != null" >
        is_valid = #{is_valid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>