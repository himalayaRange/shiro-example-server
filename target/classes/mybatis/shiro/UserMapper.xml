<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.zygx.backFramework.dao.IUserDao" >
  <resultMap id="BaseResultMap" type="cn.com.zygx.backFramework.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, nickname, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <!-- 所有用户 --> 
   <select id="listUser" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_user
  </select>
  
  <!-- 登录 查询-->
   <select id="loadByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where username=#{username,jdbcType=VARCHAR}
  </select>
  
  <!-- 用户所有能访问的资源 -->
   <select id="listByRole" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
    u.id,u.username,u.nickname,u.status 
    from t_user u,t_role r,t_user_role ur where 
    u.id=ur.userId and r.id=ur.roleId and r.id=#{id,jdbcType=INTEGER}
  </select>
  
   <select id="listAllResources" resultType="cn.com.zygx.backFramework.model.Resources" parameterType="java.lang.Integer">
    select res.* from t_user u,t_resources res,t_user_role ur,t_role_res rr where 
    u.id=ur.userId and ur.roleId=rr.roleId and rr.resId=res.id and u.id=#{uid,jdbcType=INTEGER}
  </select>
  
  <select id="listRoleSNByUser" resultType="java.lang.String" parameterType="java.lang.Integer">
    select sn from t_user u, t_role r ,t_user_role ur where u.id=ur.userId and r.id=ur.roleId and u.id=#{uid,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="cn.com.zygx.backFramework.model.User" >
    insert into t_user (id, username, password, 
      nickname, status)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="cn.com.zygx.backFramework.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="cn.com.zygx.backFramework.model.User" >
    update t_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.zygx.backFramework.model.User" >
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>